    //cmd_list = parse_line(line);
    //테스트 케이스======================================================= 
    line++;
    cmd_list = malloc(sizeof(t_list));
    cmd_list->data = malloc(sizeof(t_cmd));
    cmd_list->data->cmd = strdup("cat");
    cmd_list->data->args = ft_split("cat -l", ' ');
    cmd_list->data->file_redirection = ft_split("<<file2", ' ');
    cmd_list->data->pid = 0;
    cmd_list->next = 0;
    cmd_list->data->heredoc=0;
    t_list *cmd_list2;
    cmd_list2 = malloc(sizeof(t_list));
    cmd_list->next = cmd_list2;
    cmd_list2->data = malloc(sizeof(t_cmd));
    cmd_list2->data->cmd = strdup("wac");
    cmd_list2->data->args = ft_split("wac -l", ' ');
    cmd_list2->data->file_redirection = ft_split(">k", ' ');
    cmd_list2->data->pid = 0;
    cmd_list2->next = 0;
    cmd_list2->data->heredoc=0;
    t_list *cmd_list3;
    cmd_list3 = malloc(sizeof(t_list));
    cmd_list2->next = cmd_list3;
    cmd_list3->data = malloc(sizeof(t_cmd));
    cmd_list3->data->cmd = strdup("cat");
    cmd_list3->data->args = ft_split("cat", ' ');
    cmd_list3->data->file_redirection = ft_split("<<hello <<hi", ' ');
    cmd_list3->data->pid = 0;
    cmd_list3->next = 0;
    cmd_list3->data->heredoc=0;
    //==================================================================